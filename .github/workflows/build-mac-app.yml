name: Build Mac App

# main 브랜치에 푸시될 때, 혹은 수동으로 실행할 때 동작
on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-mac:
    # macOS 호스트에서 실행
    runs-on: macos-latest

    steps:
      # 1) 코드 체크아웃
      - uses: actions/checkout@v3

      # 2) 원하는 Python 버전 설치
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      # 3) pip 캐시 (속도 향상)
      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: python-pip-${{ hashFiles('**/requirements.txt') }}

      # 4) 의존성 설치
      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt

      # 5) py2app 으로 .app 빌드
      - name: Build .app with py2app
        run: python setup.py py2app

      # 6) dist/MyApp.app 을 ZIP으로 묶기
      - name: Package .app into zip
        run: |
          # MyApp.app 이름은 setup.py 에 정의한 APP 이름과 같아야 합니다.
          ditto -c -k --sequesterRsrc --keepParent dist/NaverRankChecker.app NaverRankChecker.zip

      # 7) ZIP을 GitHub 아티팩트로 업로드
      - name: Upload ZIP artifact
        uses: actions/upload-artifact@v3
        with:
          name: macos-app
          path: NaverRankChecker.zip
